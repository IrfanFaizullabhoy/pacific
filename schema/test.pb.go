// Code generated by protoc-gen-go.
// source: test.proto
// DO NOT EDIT!

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	test.proto

It has these top-level messages:
	Object
	ObjectRequest
	Response
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Object struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Size uint32 `protobuf:"varint,2,opt,name=size" json:"size,omitempty"`
}

func (m *Object) Reset()                    { *m = Object{} }
func (m *Object) String() string            { return proto.CompactTextString(m) }
func (*Object) ProtoMessage()               {}
func (*Object) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ObjectRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *ObjectRequest) Reset()                    { *m = ObjectRequest{} }
func (m *ObjectRequest) String() string            { return proto.CompactTextString(m) }
func (*ObjectRequest) ProtoMessage()               {}
func (*ObjectRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Response struct {
	Response string `protobuf:"bytes,1,opt,name=response" json:"response,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func init() {
	proto.RegisterType((*Object)(nil), "pb.Object")
	proto.RegisterType((*ObjectRequest)(nil), "pb.ObjectRequest")
	proto.RegisterType((*Response)(nil), "pb.Response")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for PassObject service

type PassObjectClient interface {
	// sends an object to the server
	SendObject(ctx context.Context, in *Object, opts ...grpc.CallOption) (*Response, error)
	// receives object from the server
	ReceiveObject(ctx context.Context, in *ObjectRequest, opts ...grpc.CallOption) (*Object, error)
}

type passObjectClient struct {
	cc *grpc.ClientConn
}

func NewPassObjectClient(cc *grpc.ClientConn) PassObjectClient {
	return &passObjectClient{cc}
}

func (c *passObjectClient) SendObject(ctx context.Context, in *Object, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/pb.PassObject/sendObject", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *passObjectClient) ReceiveObject(ctx context.Context, in *ObjectRequest, opts ...grpc.CallOption) (*Object, error) {
	out := new(Object)
	err := grpc.Invoke(ctx, "/pb.PassObject/receiveObject", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for PassObject service

type PassObjectServer interface {
	// sends an object to the server
	SendObject(context.Context, *Object) (*Response, error)
	// receives object from the server
	ReceiveObject(context.Context, *ObjectRequest) (*Object, error)
}

func RegisterPassObjectServer(s *grpc.Server, srv PassObjectServer) {
	s.RegisterService(&_PassObject_serviceDesc, srv)
}

func _PassObject_SendObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Object)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PassObjectServer).SendObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.PassObject/SendObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PassObjectServer).SendObject(ctx, req.(*Object))
	}
	return interceptor(ctx, in, info, handler)
}

func _PassObject_ReceiveObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ObjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PassObjectServer).ReceiveObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.PassObject/ReceiveObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PassObjectServer).ReceiveObject(ctx, req.(*ObjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PassObject_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.PassObject",
	HandlerType: (*PassObjectServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "sendObject",
			Handler:    _PassObject_SendObject_Handler,
		},
		{
			MethodName: "receiveObject",
			Handler:    _PassObject_ReceiveObject_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("test.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 177 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x8f, 0xcd, 0x0a, 0x82, 0x40,
	0x14, 0x85, 0x55, 0x42, 0xec, 0x90, 0x8b, 0x66, 0x25, 0xae, 0x64, 0x82, 0x70, 0x25, 0x52, 0x0f,
	0x52, 0xcc, 0x1b, 0x38, 0x76, 0x21, 0x83, 0x74, 0xf2, 0x4e, 0x2d, 0x7a, 0xfa, 0x70, 0x9c, 0x7e,
	0x16, 0xed, 0xbe, 0x33, 0x9c, 0x6f, 0x38, 0x17, 0xb0, 0xc4, 0xb6, 0x32, 0xe3, 0x60, 0x07, 0x11,
	0x19, 0x2d, 0x6b, 0xc4, 0x07, 0x7d, 0xa1, 0xd6, 0x0a, 0x81, 0x45, 0xdf, 0x5c, 0x29, 0x0b, 0x8b,
	0xb0, 0x5c, 0x2a, 0xc7, 0xd3, 0x1b, 0x77, 0x4f, 0xca, 0xa2, 0x22, 0x2c, 0x53, 0xe5, 0x58, 0x6e,
	0x90, 0xce, 0x86, 0xa2, 0xdb, 0x9d, 0xf8, 0xaf, 0x28, 0xb7, 0x48, 0x14, 0xb1, 0x19, 0x7a, 0x26,
	0x91, 0x23, 0x19, 0x3d, 0xfb, 0xce, 0x27, 0xef, 0xce, 0xc0, 0xb1, 0x61, 0xf6, 0x13, 0x4a, 0x80,
	0xa9, 0x3f, 0xf9, 0x84, 0xca, 0xe8, 0x6a, 0xe6, 0x7c, 0x35, 0xf1, 0xfb, 0x47, 0x19, 0x88, 0x1a,
	0xe9, 0x48, 0x2d, 0x75, 0x0f, 0xf2, 0xe5, 0xf5, 0xb7, 0xec, 0x77, 0xe5, 0x3f, 0xbe, 0x0c, 0x74,
	0xec, 0x6e, 0xde, 0xbf, 0x02, 0x00, 0x00, 0xff, 0xff, 0x86, 0x2b, 0x65, 0x1e, 0x01, 0x01, 0x00,
	0x00,
}
